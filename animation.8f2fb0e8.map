{"version":3,"sources":["animation.js"],"names":["resizeCanvas","r","c","document","querySelector","ctx","getContext","width","window","innerWidth","height","innerHeight","strokeStyle","lineWidth","beginPath","arc","Math","PI","stroke","addEventListener"],"mappings":";CAAA,WAKaA,SAAAA,IACDC,IACAC,EAAIC,SAASC,cAAc,UAC3BC,EAAMH,EAAEI,WAAW,MACvBJ,EAAEK,MAAQC,OAAOC,WACjBP,EAAEQ,OAASF,OAAOG,YAElBN,EAAIO,YAAc,OAClBP,EAAIQ,UAAY,EAChBR,EAAIS,YAUJT,EAAIU,IAAIb,EAAEK,MAAM,EAAGL,EAAEQ,OAAO,EAlBpB,IAkB0B,EAAG,EAAIM,KAAKC,IAC9CZ,EAAIa,SArBRV,OAAOW,iBAAiB,SAAUnB,GAAc,GAwBhDA,IA5BJ","file":"animation.8f2fb0e8.map","sourceRoot":"..","sourcesContent":["(function() {\n    let noiseMax = 1\n    let zoff = 0\n    \n    window.addEventListener('resize', resizeCanvas, false);\n    function resizeCanvas() {\n        var r = 200\n        var c = document.querySelector(\"canvas\");\n        var ctx = c.getContext(\"2d\");\n        c.width = window.innerWidth;\n        c.height = window.innerHeight;\n        var radius = 200;\n        ctx.strokeStyle = \"#FFF\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        // for(var a = 0; a <= 2 * Math.PI; a+=.03){\n        //     // let xoff = mapRange(Math.cos(a), -1, 1, 0, noiseMax)\n        //     // let yoff = mapRange(Math.sin(a), -1, 1, 0, noiseMax)\n        //     // let r = mapRange(noise.perlin2(xoff, yoff, zoff), 0, 1, 100, 200)\n        //     let x = 200 * Math.cos(a)\n        //     let y = 200 * Math.sin(a)\n        //     ctx.moveTo(x, y);\n        //     ctx.lineTo(x, y);\n        // }\n        ctx.arc(c.width/2, c.height/2, r, 0, 2 * Math.PI);\n        ctx.stroke();\n    }\n    \n    resizeCanvas();\n\n    function draw() {\n       \n    }\n\n    function mapRange (value, a, b, c, d) {\n        value = (value - a) / (b - a);\n        return c + value * (d - c);\n    }\n})();\n\n\n// export function draw () {\n//     background(0)\n//     translate( width/2, height/2)\n//     stroke(255)\n//     noFill()\n//     beginShape()\n//     for(var a = 0; a <= TWO_PI; a+=.03){\n//         let xoff = map(cos(a), -1, 1, 0, noiseMax)\n//         let yoff = map(sin(a), -1, 1, 0, noiseMax)\n//         let r = map(noise(xoff, yoff, zoff), 0, 1, 100, 200)\n//         let x = r * cos(a)\n//         let y = r * sin(a)\n//         vertex(x, y)\n//     }\n//     endShape(CLOSE)\n//     zoff += .01\n// }"]}